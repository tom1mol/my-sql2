select count(*) from Track            
    Group by AlbumId;                    #counting how many tracks use each of the five different media types.
                                         #group by the AlbumID in the track table and show the number of rows in each group.
                        
output(sample as 347 rows):
+----------+
| count(*) |
+----------+
|       10 |
|        1 |
|        3 |
|        8 |
|       15 |
|       13 |
|       12 |
-----------
shows number of tracks on each album...but not which album the result is for


                                    ------------------------------------------


select AlbumID, count(*) from Track
    group by AlbumId;                   #group by the AlbumID in the track table.Show the number of rows in each group and the                                      #AlbumID  for each.
    
output(sample as total 347rows):
+---------+----------+
| AlbumID | count(*) |
+---------+----------+
|       1 |       10 |
|       2 |        1 |
|       3 |        3 |
|       4 |        8 |
|       5 |       15 |
---------------------


                            -------------------------------------------------
                
select Album.Title, count(*) from Track
INNER JOIN Album on Track.AlbumID = Album.AlbumId               #show album title for each
group by Track.AlbumId;                                         #grouped by AlbumId in Track table

example Output(347 rows in full results):
+-------------------------------------------------------------------------------------------------+----------+
| Title                                                                                           | count(*) |
+-------------------------------------------------------------------------------------------------+----------+
| For Those About To Rock We Salute You                                                           |       10 |
| Balls to the Wall                                                                               |        1 |
| Restless and Wild                                                                               |        3 |
| Let There Be Rock                                                                               |        8 |
| Big Ones                                                                                        |       15 |
| Jagged Little Pill                                                                              |       13 |
| Facelift                                                                                        |       12 |
| Warner 25 Anos                                                                                  |       14 |
| Plays Metallica By Four Cellos                                                                  |        8 |


The key to the group by is that the repeating value in the grouped column, AlbumID, defines a group of rows and 
gets collapsed into one row.
You can then use an aggregate function on that group, just as you previously did on an entire query result.


                    ------------------------------------------ --



select AlbumId, min(UnitPrice) from Track               #cheapest track on each album using min aggregate function
    group by AlbumId; 
    
    
output(sample out of total 347 rows:
+---------+----------------+
| AlbumId | min(UnitPrice) |        #cheapest track on each album using the min aggregate function.
+---------+----------------+
|       1 |           0.99 |
|       2 |           0.99 |
|       3 |           0.99 |
|       4 |           0.99 |
|       5 |           0.99 |
|       6 |           0.99 |
---------------------------
    
                        ----------------------------------------------------------------


select AlbumId, max(UnitPrice) from Track
    group by AlbumId;                       #dearest track on each album
    
    
output(sample out of total):
+---------+----------------+
| AlbumId | max(UnitPrice) |
+---------+----------------+
|       1 |           0.99 |
|       2 |           0.99 |
|       3 |           0.99 |
|       4 |           0.99 |
|       5 |           0.99 |
|       6 |           0.99 |
|       7 |           0.99 |
|       8             1.99 |
---------------------------
        
                                    ------------------------------------------
        
--------------------------
total cost of each album..rounded to 2 decimal places and sum the unitprice

select AlbumId, round(sum(UnitPrice), 2) from Track
group by AlbumId;


output(sample out of 347rows):
+---------+--------------------------+
| AlbumId | round(sum(UnitPrice), 2) |
+---------+--------------------------+
|       1 |                     9.90 |
|       2 |                     0.99 |
|       3 |                     2.97 |
|       4 |                     7.92 |
|       5 |                    14.85 |
|       6 |                    12.87 |
|       7 |                    11.88 |
|       8 |                    13.86 |
|       9 |                     7.92 |
-------------------------------------


                            ---------------------------------------------------

join the album table to include the title of the album.

select Album.Title, round(sum(UnitPrice), 2) from Track
INNER JOIN Album on Track.AlbumId = Album.AlbumId
group by Track.AlbumId;



output(sample of 347 rows):
Title                                                                                           | round(sum(UnitPrice), 2) |
+-------------------------------------------------------------------------------------------------+--------------------------+
| For Those About To Rock We Salute You                                                           |                     9.90 |
| Balls to the Wall                                                                               |                     0.99 |
| Restless and Wild                                                                               |                     2.97 |
| Let There Be Rock                                                                               |                     7.92 |
| Big Ones                                                                                        |                    14.85 |
| Jagged Little Pill                                                                              |                    12.87 |
| Facelift                                                                                        |                    11.88 |
| Warner 25 Anos                                                                                  |                    13.86 |
| Plays Metallica By Four Cellos                                                                  |                     7.92 |
| Audioslave                                                                                      |                    13.86 |
| Out Of Exile                                                                                    |                    11.88 |
| BackBeat Soundtrack                                                                             |                    11.88 |
| The Best Of Billy Cobham                                                                        |                     7.92 |

